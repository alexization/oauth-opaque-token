spring:
  application:
    name: oauth-opaque-token

  profiles:
    active: local

---
# Local Development Profile
spring:
  config:
    activate:
      on-profile: local

  datasource:
    url: jdbc:mysql://localhost:3306/oauth_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul
    username: oauth_user
    password: oauth_password
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        show_sql: true
    show-sql: true
    open-in-view: false

  security:
    oauth2:
      resourceserver:
        opaque-token:
          introspection-uri: ${INTROSPECTION_URI}
          client-id: ${CLIENT_ID}
          client-secret: ${CLIENT_SECRET}

logging:
  level:
    root: INFO
    com.example.oauth: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

---
# Docker Profile
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: true
        show_sql: false
    show-sql: false
    open-in-view: false

  security:
    oauth2:
      resourceserver:
        opaque-token:
          introspection-uri: ${INTROSPECTION_URI}
          client-id: ${CLIENT_ID}
          client-secret: ${CLIENT_SECRET}

logging:
  level:
    root: INFO
    com.example.oauth: INFO
    org.hibernate.SQL: DEBUG
